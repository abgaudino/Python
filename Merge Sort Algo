#Merge sort algorithm

#breaks a list up, sorts items, merges lists back together
#MergeSOrt is recursive (method that calls itself)
#Divide and Conquer algo
#Efficient for large data sets
#log n merge steps, each merge step doubles the list size
#n work for each merge steps as it looks at every item
# O (n log n)

def merge_sort(A):
  merge_sort2(A, 0, len(A)-1)

def merge_sort2(A, first, last):
  if first < last:
    middle = (first + last)//2
    merge_sort2(A, first, middle)
    merge_sort2(A, middle+1, last)
    merge(A, first, middle, last)

def merge(A, first, middle, last):
  L = A[first:middle]
  R = A[middle:last+1]
  L.append(9999999999)
  R.append(9999999999)
  i = j = 0
  for k in range (first, last+1):
    if L[i] <= R[j]:
      A[k] = L[i]
      i += 1
    else:
      A[k] = R[j]
      j += 1
